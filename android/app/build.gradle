apply plugin: "com.android.application"
apply plugin: "com.facebook.react"

react {
    root = rootProject.file("../")
    reactNativeDir = rootProject.file("../node_modules/react-native")
    codegenDir = rootProject.file("../node_modules/react-native-codegen")
    cliFile = rootProject.file("../node_modules/react-native/cli.js")
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    ndkVersion rootProject.ext.ndkVersion

    namespace "com.cattleapp"

    defaultConfig {
        applicationId "com.cattleapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            // Configure your release signing config here
            // storeFile file('my-release-key.keystore')
            // storePassword System.getenv('KEYSTORE_PASSWORD')
            // keyAlias System.getenv('KEY_ALIAS')
            // keyPassword System.getenv('KEY_PASSWORD')
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    buildFeatures {
        buildConfig true
    }

    packagingOptions {
        pickFirst '**/libjsc.so'
        pickFirst '**/libc++_shared.so'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

dependencies {
    implementation project(':react-native-image-crop-picker')
    implementation project(':react-native-geolocation-service')
    implementation project(':react-native-fs')
    implementation project(':react-native-image-marker')
    implementation project(':react-native-vector-icons')
    
    implementation("com.facebook.react:react-android")
    implementation("com.facebook.react:hermes-android")
    
    debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}")
    debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
        exclude group:'com.squareup.okhttp3', module:'okhttp'
    }
    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}")
}

apply from: file("../node_modules/react-native/react.gradle")
apply from: file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle")
applyNativeModulesAppBuildGradle(project)

def isNewArchitectureEnabled() {
    return project.hasProperty("newArchEnabled") && project.newArchEnabled == "true"
}